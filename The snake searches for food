import pygame
import time
import random

pygame.init()

# Set screen dimensions
width = 1000
height = 600

# Define colors
white = (255, 255, 255)
yellow = (255, 255, 102)
black = (0, 0, 0)
red = (213, 50, 80)
green = (0, 255, 0)
blue = (50, 153, 213)

# Set block size and speed
block_size = 20
speed = 10

# Set font
font_style = pygame.font.SysFont(None, 50)

# Define functions
def our_snake(block_size, snake_list):
    for x in snake_list:
        pygame.draw.rect(gameDisplay, black, [x[0], x[1], block_size, block_size])

def message(msg, color):
    mesg = font_style.render(msg, True, color)
    gameDisplay.blit(mesg, [width / 8, height / 6])

def gameLoop():
    gameExit = False
    gameOver = False

    lead_x = width / 2
    lead_y = height / 2

    lead_x_change = 0
    lead_y_change = 0

    snake_list = []
    snake_length = 1

    randAppleX = round(random.randrange(0, width - block_size) / float(block_size)) * block_size
    randAppleY = round(random.randrange(0, height - block_size) / float(block_size)) * block_size

    while not gameExit:
        while gameOver == True:
            gameDisplay.fill(white)
            message("Game Over!Press R to Play Again or Q to Quit", red)
            pygame.display.update()

            for event in pygame.event.get():
                if event.type == pygame.QUIT:
                    gameExit = True
                    gameOver = False
                if event.type == pygame.KEYDOWN:
                    if event.key == pygame.K_q:
                        gameExit = True
                        gameOver = False
                    if event.key == pygame.K_r:
                        gameLoop()

        for event in pygame.event.get():
            if event.type == pygame.QUIT:
                gameExit = True
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_LEFT:
                    lead_x_change = -block_size
                    lead_y_change = 0
                elif event.key == pygame.K_RIGHT:
                    lead_x_change = block_size
                    lead_y_change = 0
                elif event.key == pygame.K_UP:
                    lead_y_change = -block_size
                    lead_x_change = 0
                elif event.key == pygame.K_DOWN:
                    lead_y_change = block_size
                    lead_x_change = 0

        if lead_x >= width or lead_x < 0 or lead_y >= height or lead_y < 0:
            gameOver = True

        lead_x += lead_x_change
        lead_y += lead_y_change

        gameDisplay.fill(blue)

        pygame.draw.rect(gameDisplay, green, [randAppleX, randAppleY, block_size, block_size])

        snake_head = []
        snake_head.append(lead_x)
        snake_head.append(lead_y)
        snake_list.append(snake_head)
        if len(snake_list) > snake_length:
            del snake_list[0]

        for x in snake_list[:-1]:
            if x == snake_head:
                gameOver = True

        our_snake(block_size, snake_list)

        pygame.display.update()

        if lead_x == randAppleX and lead_y == randAppleY:
            randAppleX = round(random.randrange(0, width - block_size) / float(block_size)) * block_size
            randAppleY = round(random.randrange(0, height - block_size) / float(block_size)) * block_size
            snake_length += 1

        clock.tick(speed)

    pygame.quit()
    quit()

gameDisplay = pygame.display.set_mode((width, height))
pygame.display.set_caption('Snake Game')
clock = pygame.time.Clock()

gameLoop()
